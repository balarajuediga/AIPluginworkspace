create Employee class with properties like empId,empName,empSalaray,empDeaprtment along with getters and setters

create CRUD endpoints for the below in sprinboot
public class Employee {
    private int empId;
    private String empName;
    private double empSalary;
    private String empDepartment;
@RestController
@RequestMapping("/employees")
public class EmployeeController {
    
    // Inject EmployeeService
    @Autowired
    private EmployeeService employeeService;
    
    // Create a new employee
    @PostMapping("/")
    public ResponseEntity<Employee> createEmployee(@RequestBody Employee employee) {
        Employee createdEmployee = employeeService.createEmployee(employee);
        return ResponseEntity.ok(createdEmployee);
    }
    
    // Get all employees
    @GetMapping("/")
    public ResponseEntity<List<Employee>> getAllEmployees() {
        List<Employee> employees = employeeService.getAllEmployees();
        return ResponseEntity.ok(employees);
    }
    
    // Get employee by ID
    @GetMapping("/{id}")
    public ResponseEntity<Employee> getEmployeeById(@PathVariable int id) {
        Employee employee = employeeService.getEmployeeById(id);
        if (employee != null) {
            return ResponseEntity.ok(employee);
        }
        return ResponseEntity.notFound().build();
    }
    
    // Update employee by ID
    @PutMapping("/{id}")
    public ResponseEntity<Employee> updateEmployeeById(@PathVariable int id, @RequestBody Employee employee) {
        Employee updatedEmployee = employeeService.updateEmployeeById(id, employee);
        if (updatedEmployee != null) {
            return ResponseEntity.ok(updatedEmployee);
        }
        return ResponseEntity.notFound().build();
    }
    
    // Delete employee by ID
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteEmployeeById(@PathVariable int id) {
        boolean deleted = employeeService.deleteEmployeeById(id);
        if (deleted) {
            return ResponseEntity.noContent().build();
        }
        return ResponseEntity.notFound().build();
    }
}
 
    
    public int getEmpId() {
        return empId;
    }
    
    public void setEmpId(int empId) {
        this.empId = empId;
    }
    
    public String getEmpName() {
        return empName;
    }
    
    public void setEmpName(String empName) {
        this.empName = empName;
    }
    
    public double getEmpSalary() {
        return empSalary;
    }
    
    public void setEmpSalary(double empSalary) {
        this.empSalary = empSalary;
    }
    
    public String getEmpDepartment() {
        return empDepartment;
    }
    
    public void setEmpDepartment(String empDepartment) {
        this.empDepartment = empDepartment;
    }
}
 